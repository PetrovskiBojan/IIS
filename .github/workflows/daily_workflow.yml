name: Daily Model Training

on:
  schedule:
    - cron: '30 16 * * *'  # Runs at 16:30 UTC every day
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      poetry-path: ${{ steps.install-poetry.outputs.poetry-path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - id: install-poetry
        name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
          echo "::set-output name=poetry-path::${HOME}/.local/bin/poetry"

      - name: Install dependencies
        run: |
          ${{ steps.install-poetry.outputs.poetry-path }} config virtualenvs.create false
          ${{ steps.install-poetry.outputs.poetry-path }} install

  fetch_data:
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: DVC Pull and Fetch Data
        run: |
          ${{ needs.setup.outputs.poetry-path }} run dvc pull -r origin
          ${{ needs.setup.outputs.poetry-path }} run python scripts/fetch_data.py

  preprocess_data:
    needs: fetch_data
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Preprocess Data
        run: |
          ${{ needs.setup.outputs.poetry-path }} run python scripts/preprocess_data.py

  train_model:
    needs: preprocess_data
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Train Model
        run: |
          ${{ needs.setup.outputs.poetry-path }} run python scripts/train_model.py

  push_changes:
    needs: train_model
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: DVC Add and Push Changes
        run: |
          ${{ needs.setup.outputs.poetry-path }} run dvc add data
          ${{ needs.setup.outputs.poetry-path }} run dvc add models
          ${{ needs.setup.outputs.poetry-path }} run dvc push -r origin

      - name: Git operations
        run: |
          git config --global user.email "github-actions-bot@example.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "My daily workflow pipeline" || echo "No changes to commit"
          git push
