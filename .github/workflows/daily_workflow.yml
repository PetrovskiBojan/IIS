name: Daily Model Training

on:
  schedule:
    - cron: '30 16 * * *'  # Runs at 16:30 UTC every day
  workflow_dispatch:

jobs:
  fetch_data:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install
      - name: Install DVC with S3 support
        run: |
          pip install 'dvc[s3]'
      - name: Configure DVC remote
        run: |
          dvc remote modify origin endpointurl https://dagshub.com/PetrovskiBojan/IIS.s3
          dvc remote modify origin access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }}
          dvc remote modify origin secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }}
      - name: DVC Pull
        run: |
          dvc pull -r origin
      - name: Fetch Data
        run: |
          poetry run python scripts/fetch_data.py
      - name: Git and DVC Operations
        run: |
          dvc add data
          git add .
          git commit -m "Update fetched data" || echo "No changes to commit"
          git push
          dvc push -r origin

  validate_data:
    needs: fetch_data
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: poetry install
      - name: Validate Data
        run: poetry run python scripts/validate_data.py

  evaluate_data:
    needs: validate_data
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: poetry install
      - name: Evaluate Data
        run: poetry run python scripts/evaluate_data.py

  preprocess_data:
    needs: evaluate_data
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: poetry install
      - name: Preprocess Data
        run: poetry run python scripts/preprocess_data.py
      - name: Git and DVC Operations
        run: |
          dvc add data/processed
          git add .
          git commit -m "Update preprocessed data" || echo "No changes to commit"
          git push
          dvc push -r origin

  train_model:
    needs: preprocess_data
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install
      - name: Train Model
        run: |
          poetry run python scripts/train_model.py
      - name: Git and DVC Operations
        run: |
          dvc add models
          git add .
          git commit -m "Update trained models" || echo "No changes to commit"
          git push
          dvc push -r origin
