name: Daily Model Training

on:
  schedule:
    - cron: '30 16 * * *'  # Runs at 16:30 UTC every day
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python and Poetry
        run: |
          echo "Setting up Python"
          sudo apt-get update
          sudo apt-get install -y python3.12 python3-pip
          echo "Installing Poetry"
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.create false

      - name: Install dependencies
        run: |
          poetry install

      - name: Configure and Pull DVC
        run: |
          pip install 'dvc[s3]'
          dvc remote modify origin endpointurl https://dagshub.com/PetrovskiBojan/IIS.s3
          dvc remote modify origin access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }}
          dvc remote modify origin secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }}
          dvc pull -r origin

  fetch_data:
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python and Poetry
        run: |
          sudo apt-get update
          sudo apt-get install -y python3.12 python3-pip
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.create false

      - name: Fetch Data
        run: |
          poetry install
          poetry run python scripts/fetch_data.py

  preprocess_data:
    needs: fetch_data
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python and Poetry
        run: |
          sudo apt-get update
          sudo apt-get install -y python3.12 python3-pip
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.create false

      - name: Preprocess Data
        run: |
          poetry install
          poetry run python scripts/preprocess_data.py

  train_model:
    needs: preprocess_data
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python and Poetry
        run: |
          sudo apt-get update
          sudo apt-get install -y python3.12 python3-pip
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.create false

      - name: Train Model
        run: |
          poetry install
          poetry run python scripts/train_model.py

  wrap_up:
    needs: train_model
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python and Poetry
        run: |
          sudo apt-get update
          sudo apt-get install -y python3.12 python3-pip
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.create false

      - name: Finalize Data and Models
        run: |
          poetry install
          poetry run dvc add data
          poetry run dvc add models
          poetry run dvc push -r origin

      - name: Git operations
        run: |
          git config --global user.email "github-actions-bot@example.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "My daily workflow pipeline" || echo "No changes to commit"
          git push
