name: Daily Model Training

on:
  schedule:
    - cron: '30 16 * * *'  # Runs at 16:30 UTC every day
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      poetry-path: ${{ steps.install-poetry.outputs.poetry-path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - id: install-poetry
        name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
          echo "::set-output name=poetry-path::${HOME}/.local/bin/poetry"

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install
        working-directory: backend/IE-app  # This should correctly point to the directory containing pyproject.toml

  fetch_data:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Poetry locally for job
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
        working-directory: backend/IE-app

      - name: DVC Pull and Fetch Data
        run: |
          poetry run dvc pull -r origin
          poetry run python scripts/fetch_data.py
        working-directory: backend/IE-app

  preprocess_data:
    needs: fetch_data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Poetry locally for job
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
        working-directory: backend/IE-app

      - name: Preprocess Data
        run: |
          poetry run python scripts/preprocess_data.py
        working-directory: backend/IE-app

  train_model:
    needs: preprocess_data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Poetry locally for job
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
        working-directory: backend/IE-app

      - name: Train Model
        run: |
          poetry run python scripts/train_model.py
        working-directory: backend/IE-app

  push_changes:
    needs: train_model
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Poetry locally for job
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
        working-directory: backend/IE-app

      - name: DVC Add and Push Changes
        run: |
          poetry run dvc add data
          poetry run dvc add models
          poetry run dvc push -r origin
        working-directory: backend/IE-app

      - name: Git operations
        run: |
          git config --global user.email "github-actions-bot@example.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "My daily workflow pipeline" || echo "No changes to commit"
          git push
        working-directory: backend/IE-app
