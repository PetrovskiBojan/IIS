name: Daily Model Training

on:
  schedule:
    - cron: '30 16 * * *'  # Runs at 16:30 UTC every day
  workflow_dispatch:

jobs:
  fetch_data:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install
      - name: Install DVC with S3 support
        run: |
          pip install 'dvc[s3]'
      - name: Configure DVC remote and Pull
        run: |
          dvc remote modify origin endpointurl https://dagshub.com/PetrovskiBojan/IIS.s3
          dvc remote modify origin access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }}
          dvc remote modify origin secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }}
          dvc pull -r origin
      - name: Fetch Data
        run: |
          poetry run python scripts/fetch_data.py
      - name: Commit and Push Changes
        run: |
          dvc add data
          dvc push -r origin
          git config --global user.email "github-actions-bot@example.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "Update fetched data"
          git push

   preprocess_data:
    needs: fetch_data
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.create false
          poetry install
      - name: Install DVC with S3 support and Pull
        run: |
          pip install 'dvc[s3]'
          dvc pull -r origin
      - name: Preprocess Data
        run: |
          poetry run python scripts/preprocess_data.py
      - name: Add changes to DVC and Git
        run: |
          dvc add data
          git add data.dvc data/
          git add .dvc/config
      - name: DVC Push
        run: |
          dvc push -r origin
      - name: Commit and Push Changes
        run: |
          git config --global user.email "github-actions-bot@example.com"
          git config --global user.name "GitHub Actions"
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update preprocessed data" && git push)

  train_model:
    needs: preprocess_data
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.create false
          poetry install
      - name: Install DVC with S3 support and Pull
        run: |
          pip install 'dvc[s3]'
          dvc pull -r origin
      - name: Train Model
        run: |
          poetry run python scripts/train_model.py
      - name: Commit and Push Changes
        run: |
          dvc add models
          dvc push -r origin
          git config --global user.email "github-actions-bot@example.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "Update trained models"
          git push
