name: Daily Model Training

on:
  schedule:
    - cron: '30 16 * * *'  # Runs at 16:30 UTC every day
  workflow_dispatch:

jobs:
  # Checkout code and setup environment (fixed poetry command)
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # Ensure this matches your project's Python version
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Configure Poetry (fixed path to pyproject.toml)
        run: |
          cd backend/IE-app && poetry config virtualenvs.create false
      - name: Install dependencies
        run: |
          poetry install
      - name: Install DVC with S3 support
        run: |
          pip install 'dvc[s3]'
      - name: Configure DVC remote
        run: |
          dvc remote modify origin endpointurl https://dagshub.com/PetrovskiBojan/IIS.s3
          dvc remote modify origin access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }}
          dvc remote modify origin secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }}
      - name: DVC Pull
        run: |
          dvc pull -r origin

  # Fetch data (depends on successful setup)
  fetch_data:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Fetch Data
        run: |
          poetry run python scripts/fetch_data.py

  # Preprocess data (depends on successful fetch_data)
  preprocess_data:
    runs-on: ubuntu-latest
    needs: fetch_data
    steps:
      - uses: actions/checkout@v2
      - name: Preprocess Data
        run: |
          poetry run python scripts/preprocess_data.py

  # Train model (depends on successful preprocess_data)
  train_model:
    runs-on: ubuntu-latest
    needs: preprocess_data
    steps:
      - uses: actions/checkout@v2
      - name: Train Model
        run: |
          poetry run python scripts/train_model.py

  # DVC operations and commit (depends on successful train_model)
  dvc_and_commit:
    runs-on: ubuntu-latest
    needs: train_model
    steps:
      - uses: actions/checkout@v2
      - name: DVC Add data and models
        run: |
          poetry run dvc add data
          poetry run dvc add models
      - name: DVC Push
        run: |
          poetry run dvc push -r origin
      - name: Git operations
        run: |
          git config --global user.email "github-actions-bot@example.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "My daily workflow pipeline" || echo "No changes to commit"
          git push

