name: Model Training Pipeline

on:
  workflow_run:
    workflows: ["Data Pipeline"]
    types:
      - completed

jobs:
  train_model:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install and Configure Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.create false
          poetry install
      - name: Install DVC with S3 support
        run: |
          pip install 'dvc[s3]'
      - name: Configure DVC remote credentials
        run: |
          dvc remote modify origin access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }} --local
          dvc remote modify origin secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }} --local
      - name: Pull Processed Data with DVC
        run: |
          dvc pull data
      - name: Train Model
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: |
          poetry run python scripts/train_model.py
      - name: Git and DVC Operations
        run: |
          dvc add models
          git add .
          git commit -m "Update trained models" || echo "No changes to commit"
          git push
          dvc push -r origin

  test_model:
    needs: train_model
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/IE-app
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install and Configure Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.create false
          poetry install
      - name: Install DVC with S3 support
        run: |
          pip install 'dvc[s3]'
      - name: Configure DVC remote credentials
        run: |
          dvc remote modify origin access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }} --local
          dvc remote modify origin secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }} --local
      - name: Pull Processed Data with DVC
        run: |
          dvc pull data
      - name: Test Model
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: |
          poetry run python scripts/test_model.py
      - name: Git and DVC Operations
        run: |
          dvc add test_results
          git add .
          git commit -m "Update test results" || echo "No changes to commit"
          git push
          dvc push -r origin
